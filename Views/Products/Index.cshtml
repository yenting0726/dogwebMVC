
@using Newtonsoft.Json
@model IEnumerable<dogwebMVC.Models.Productdogweb>
@{
    ViewData["Title"] = "Index";
}

<h1>產品</h1>
<div id="app1">
    <p v-show="showDiv">
        <a asp-action="Create">新增產品</a>
    </p>
    <a class="btn btn-success mb-3" asp-controller="Home" asp-action="shopping">查看購物車</a>

    <div class="row">
        @foreach (var item in Model)
        {
            <div class="col-md-4">
                <div class="card mb-4">
                    <img src="@item.PhotoPath" class="card-img-top fixed-img" alt="...">
                    <div class="card-body">
                        <h5 class="card-title">@Html.DisplayFor(modelItem => item.Name)</h5>
                        <p class="card-text">@Html.DisplayFor(modelItem => item.Price)</p>
                        <div class="btn-group" role="group" aria-label="Quantity controls">
                            <button type="button" class="btn btn-secondary" v-on:click="add(@item.Id, 1)">+</button>
                            <button type="button" class="btn btn-light" disabled>
                                <span>{{ "數量:" + counts[@item.Id] }}</span>
                            </button>
                            <button type="button" class="btn btn-secondary" v-on:click="add(@item.Id, -1)">-</button>
                        </div>
                        <a href="#" class="btn btn-primary" v-on:click.prevent="addToCart(@item.Id)">加入購物車</a>

                        <div>
                            <p v-show="showDiv">
                                <a asp-action="Edit" asp-route-id="@item.Id">修改</a>
                                <a asp-action="Details" asp-route-id="@item.Id">詳細</a>
                                <a asp-action="Delete" asp-route-id="@item.Id">刪除</a>
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!-- 將商品資料以 JSON 格式嵌入，避免中文編碼問題 -->
<script type="application/json" id="products-data">
    @Html.Raw(JsonConvert.SerializeObject(Model.Select(item => new { 
        Id = item.Id, 
        Name = item.Name, 
        PhotoPath = item.PhotoPath, 
        Price = item.Price 
    })))
</script>


<script>
    const app1 = Vue.createApp({
        data() {
            return {
                showDiv: true,
                counts: {
                @foreach (var item in Model)
                     {
                    @: "@item.Id": 1@(item != Model.Last() ? "," : "")
                    }
                    },
                products: [
                            
                           ]
    }
            
    },
 mounted() {
            // 從 JSON script 標籤讀取商品資料
            const productsData = document.getElementById('products-data');
            if (productsData) {
                try {
                    this.products = JSON.parse(productsData.textContent);
                    console.log('商品資料載入成功：', this.products);
                } catch (error) {
                    console.error('載入商品資料時發生錯誤：', error);
                }
            }
        },



    methods: {
        add(id, number) {
            if (!this.counts[id]) {
                this.counts[id] = 1;
            }
            this.counts[id] += number;
            if (this.counts[id] < 1) this.counts[id] = 1;
        },

        addToCart(id) {
            try {
            let cart = JSON.parse(localStorage.getItem('cart')) || {};

            // 找出商品物件
            const product = this.products.find(p => p.Id == id);
            if (!product) {
                alert('找不到商品資料');
                return;
            }
// 確保數量是有效的數字
                    const quantity  = parseInt(this.counts[id]) || 1;

            if (cart[id]) {
                cart[id].quantity += this.counts[id]; // ✅ 累加數量
            } else {
                cart[id] = {
                    quantity: quantity,
                    name: product.Name,
                    photoPath: product.PhotoPath,
                     price: parseFloat(product.Price) // 確保價格是數字
                };
            }

            localStorage.setItem('cart', JSON.stringify(cart));
   console.log('已加入購物車：', cart[id]);
                    alert(`已加入購物車！\n商品：${product.Name}\n數量：${quantity}`);
         // 重置數量為 1
                    this.counts[id] = 1;
                } catch (error) {
                    console.error('加入購物車時發生錯誤：', error);
                    alert('加入購物車失敗，請稍後再試');
                }
            }
        }
    
  });

    app1.mount('#app1');
</script>
